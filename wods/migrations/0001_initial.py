# Generated by Django 3.0.7 on 2020-06-25 19:38

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('athletes', '0001_initial'),
        ('wodmovements', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, default='')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('workout_style', models.CharField(choices=[('RFT', 'Rounds for Time'), ('RFT_SVR', 'RFT: Same Varying Reps (e.g. 21 - 15 - 9)'), ('RFT_IVR', 'RFT: Independent Varying Reps'), ('RFT_BOOK', 'RFT with Bookends (Buy-In, Buy-Out)'), ('ERFT', 'Each Round For Time'), ('FT', 'For Time'), ('FQ', 'For Quality'), ('EMOM_M', 'EMOM: Multiple Movements per Interval'), ('EMOM_A', 'EMOM: Alternate Movements each Interval'), ('AMRAP', 'AMRAP'), ('AMRAP_R', 'AMRAP Repeats'), ('AMRAP_BI', 'AMRAP with Buy-In'), ('AMRAP_MR', 'AMRAP with Max Rep'), ('AMREPS', 'AMReps'), ('ASC_AMREPS', 'Ascending AMReps'), ('T', 'Tabata'), ('FGB', 'FGB Style'), ('DBR', 'Death By Reps'), ('RFMR', 'Rounds for Max Reps'), ('RRT', 'Reps in Remaining Time'), ('SETS', 'Sets'), ('EMOM', 'EMOM'), ('X_RFT', 'X Reps for Time'), ('AIXT', 'AMReps in X Time'), ('MD', 'Max Duration'), ('RM', 'X Rep Max'), ('DBW', 'Death By Weight'), ('SD', 'Single Distance'), ('IR', 'Intervals / Repeats'), ('DBD', 'Death By Distance'), ('OTM', 'On the Minute'), ('FD', 'For Distance')], max_length=10)),
                ('workout_duration', models.DurationField(blank=True)),
                ('rounds', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('rep_schema', models.CharField(blank=True, max_length=50)),
                ('workout_type', models.CharField(blank=True, choices=[('TIMED', 'Timed'), ('AMRAP', 'AMRAP'), ('TABATA', 'Tabata'), ('TOTAL_REPS', 'Total Reps')], max_length=10)),
                ('benchmark', models.CharField(blank=True, choices=[('GIRL', 'Girl'), ('LIFT', 'Lift'), ('HERO', 'Hero'), ('ENDURANCE', 'Endurance'), ('GYMNASTIC', 'Gymnastic'), ('THE_OPEN', 'The Open'), ('FAMOUS', 'Famous')], max_length=10)),
                ('scheme', models.CharField(blank=True, choices=[('SINGLET', 'Singlet'), ('COUPLET', 'Couplet'), ('TRIPLET', 'Triplet'), ('CHIPPER', 'Chipper'), ('MULTLET', 'MULTLET')], max_length=7)),
                ('repetition_count', models.CharField(blank=True, choices=[('L', 'Low'), ('M', 'Medium'), ('H', 'High')], max_length=1)),
                ('duration', models.CharField(blank=True, choices=[('SPRINT', 'Sprint'), ('SHORT', 'Short'), ('MEDIUM', 'Medium'), ('LONG', 'Long')], max_length=6)),
                ('load', models.CharField(blank=True, choices=[('L', 'Light'), ('M', 'Medium'), ('H', 'Heavy')], max_length=1)),
                ('modality', models.CharField(blank=True, choices=[('M', 'Metcon'), ('G', 'Gymnastic'), ('W', 'Weightlifting'), ('MG', 'Metcon and Gymnastic'), ('MW', 'Metcon and Weightlifting'), ('WG', 'Weightlifting and Gymnastic')], max_length=3)),
                ('components', models.ManyToManyField(to='wodmovements.Component')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='athletes.Athlete')),
            ],
        ),
    ]
